plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'fr.epsi.montpellier'
version = '0.9.5'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // Spring
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Log4J
    implementation("org.springframework.boot:spring-boot-starter-log4j2")
    // Advanced Message Queuing Protocol
    implementation("org.springframework.boot:spring-boot-starter-amqp")
    // JWT
    implementation('io.jsonwebtoken:jjwt-api:0.10.5')
    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.3'
    // Swagger
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')
    // Tests
    implementation 'junit:junit:4.12'

    // Librairie LDAP "maison"
    implementation files('libs/LdapManagement.jar')

    // JWT
    runtimeOnly ('io.jsonwebtoken:jjwt-impl:0.10.5',
            'io.jsonwebtoken:jjwt-jackson:0.10.5')

    // Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.springframework.security:spring-security-test')
}
configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
/*configurations.all {
    resolutionStrategy.dependencySubstitution.all { dependency ->
        if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
            dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
        }
    }
}*/